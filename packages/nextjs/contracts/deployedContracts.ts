/**
 * This file is autogenerated by Scaffold-Stark.
 * You should not edit it manually or your changes might be overwritten.
 */

const deployedContracts = {
  devnet: {
    AttestationRegistry: {
      address:
        "0x07c59f28a693a4d629f0b0358ae52649ca3e6743e111bedc0c822ee76ece3387",
      abi: [
        {
          type: "impl",
          name: "AttestationRegistryImpl",
          interface_name:
            "contracts::AttestationRegistry::IAttestationRegistry",
        },
        {
          type: "struct",
          name: "core::byte_array::ByteArray",
          members: [
            {
              name: "data",
              type: "core::array::Array::<core::bytes_31::bytes31>",
            },
            {
              name: "pending_word",
              type: "core::felt252",
            },
            {
              name: "pending_word_len",
              type: "core::integer::u32",
            },
          ],
        },
        {
          type: "enum",
          name: "core::bool",
          variants: [
            {
              name: "False",
              type: "()",
            },
            {
              name: "True",
              type: "()",
            },
          ],
        },
        {
          type: "interface",
          name: "contracts::AttestationRegistry::IAttestationRegistry",
          items: [
            {
              type: "function",
              name: "attest",
              inputs: [
                {
                  name: "schema_uid",
                  type: "core::integer::u128",
                },
                {
                  name: "recipient",
                  type: "core::starknet::contract_address::ContractAddress",
                },
                {
                  name: "data",
                  type: "core::byte_array::ByteArray",
                },
                {
                  name: "revocable",
                  type: "core::bool",
                },
              ],
              outputs: [
                {
                  type: "core::integer::u128",
                },
              ],
              state_mutability: "external",
            },
          ],
        },
        {
          type: "constructor",
          name: "constructor",
          inputs: [
            {
              name: "schema_registry_address",
              type: "core::starknet::contract_address::ContractAddress",
            },
          ],
        },
        {
          type: "event",
          name: "contracts::AttestationRegistry::AttestationRegistry::Attested",
          kind: "struct",
          members: [
            {
              name: "recipient",
              type: "core::starknet::contract_address::ContractAddress",
              kind: "key",
            },
            {
              name: "attester",
              type: "core::starknet::contract_address::ContractAddress",
              kind: "key",
            },
            {
              name: "uid",
              type: "core::integer::u128",
              kind: "data",
            },
            {
              name: "schema_uid",
              type: "core::integer::u128",
              kind: "key",
            },
            {
              name: "timestamp",
              type: "core::integer::u64",
              kind: "data",
            },
          ],
        },
        {
          type: "event",
          name: "contracts::AttestationRegistry::AttestationRegistry::Event",
          kind: "enum",
          variants: [
            {
              name: "Attested",
              type: "contracts::AttestationRegistry::AttestationRegistry::Attested",
              kind: "nested",
            },
          ],
        },
      ],
    },
  },
  sepolia: {
    AttestationRegistry: {
      address:
        "0x077cf1b7bb4ce74559dbbab85714f1d69e520657670639ff77c9e99eedeb13f6",
      abi: [
        {
          type: "impl",
          name: "AttestationRegistryImpl",
          interface_name:
            "contracts::AttestationRegistry::IAttestationRegistry",
        },
        {
          type: "struct",
          name: "core::byte_array::ByteArray",
          members: [
            {
              name: "data",
              type: "core::array::Array::<core::bytes_31::bytes31>",
            },
            {
              name: "pending_word",
              type: "core::felt252",
            },
            {
              name: "pending_word_len",
              type: "core::integer::u32",
            },
          ],
        },
        {
          type: "enum",
          name: "core::bool",
          variants: [
            {
              name: "False",
              type: "()",
            },
            {
              name: "True",
              type: "()",
            },
          ],
        },
        {
          type: "interface",
          name: "contracts::AttestationRegistry::IAttestationRegistry",
          items: [
            {
              type: "function",
              name: "attest",
              inputs: [
                {
                  name: "schema_uid",
                  type: "core::integer::u128",
                },
                {
                  name: "recipient",
                  type: "core::starknet::contract_address::ContractAddress",
                },
                {
                  name: "data",
                  type: "core::byte_array::ByteArray",
                },
                {
                  name: "revocable",
                  type: "core::bool",
                },
              ],
              outputs: [
                {
                  type: "core::integer::u128",
                },
              ],
              state_mutability: "external",
            },
          ],
        },
        {
          type: "constructor",
          name: "constructor",
          inputs: [
            {
              name: "schema_registry_address",
              type: "core::starknet::contract_address::ContractAddress",
            },
          ],
        },
        {
          type: "event",
          name: "contracts::AttestationRegistry::AttestationRegistry::Attested",
          kind: "struct",
          members: [
            {
              name: "recipient",
              type: "core::starknet::contract_address::ContractAddress",
              kind: "key",
            },
            {
              name: "attester",
              type: "core::starknet::contract_address::ContractAddress",
              kind: "key",
            },
            {
              name: "uid",
              type: "core::integer::u128",
              kind: "data",
            },
            {
              name: "schema_uid",
              type: "core::integer::u128",
              kind: "key",
            },
            {
              name: "timestamp",
              type: "core::integer::u64",
              kind: "data",
            },
          ],
        },
        {
          type: "event",
          name: "contracts::AttestationRegistry::AttestationRegistry::Event",
          kind: "enum",
          variants: [
            {
              name: "Attested",
              type: "contracts::AttestationRegistry::AttestationRegistry::Attested",
              kind: "nested",
            },
          ],
        },
      ],
    },
  },
} as const;

export default deployedContracts;
